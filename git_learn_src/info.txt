Settings
========
git config --global user.name 'exemple name'
git config --global user.email 'exemple email'

set redactor for commining
git config --global core.editor "code --wait" VSCode

search in git help
==================
/<searching element>
n ->nex
shift + n <-prev

Create pullRequest
===============
git switch -c ‘nameNewBranch’
#process working in branch
git add .
git commit
git push origin ‘cratedNameNewBranch’ <- pullRequest

Vusial
=====
git logg --decorate --graph --all - show fully info


ListComand Terminal
    git clone https://linkRepo
   
    git checkout ‘nameBranch’--------- MoveToBranch [1.1]
	 git switch <nameBranch> — moveToBranch         [1.2]
    git pull origin ‘nameBranch’ --------- GetDataGitHub and apply
    git checkout -b ‘nameNewBranch’ --------- createBranch and go it [2.1]
    git switch -c ‘nameBranch’ — createNewBranch and got it [2.2]
    git branch -m <old> <new> ------- rename bransh

    git branch -D <name branch> --- delete branch localRepo
    git push origin --delete <nameBranch> - delete branch remoteRepo

    git add . 
    git commit -m “text commit”
	 git commint -am ‘textCommit’

    git push origin ‘nameBranch’ --------- publicChange inBranch GitHub
    git merge ‘nameBranch’ --------------- megedCode ‘nameBranch’-> CurrentBranch
    git merge --continue --- continue merged
    git merger --abort -- del changed about marge process
    git branch -d ‘NameBranch’ ----------- del
    git fetch --------------------------- getData GitHub to StorgeArea
    git reset <name_new_file> --- delete newfile in StoreageArea
    git reset HEAD~n --soft -- delere commit by gitStory, save changes in file/s
    git reser HEAS~n --hard -- delete commit by gitStory, delete changes in file/s
    git restore --staged <NameFile> -- 
    git commit --amend ----- change last commit
    git push origin main --force - REwtire gitHistory on RemoteRepo !warion!
    git cherry-pick <hash commit> -- added onse commint in branch

solusion conflict
=================
git checkout  main
git pull
git checkout ‘nameBranch’
git merge main


GblobalMapWorkingGit
================
WorkingDirectory    StagingArea          LOcalRepo           RemoteRepo
    |                 |                       |                   |
    |    git add    ->|      git commit     ->|      git push --->|
    |                 |                       |                   |
    |                 |                       |                   |
    |    <-          git merge                |<------ git fetch  |
    |
    |                <= git pull
    |    <- git checout                      |   <- git clone


marged branches
==============
@process in main file
@process in Another/Branch
git checkout main
git merge AnotherBranch
@if conflict hapen
@process solusion conflict
git add .
got merge --continue



probelem#1
==========
origin/main = have changes <remote repo>
maint = have changes <local repo>

solusion
    git status
    git diff main origin/main  --see deferent changes local/remote repo

