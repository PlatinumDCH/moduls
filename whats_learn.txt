project
    1.personal assistent
    2.rest api application FastApi
    3.Presonal assistent (Flask-Django, Aiohttp, )


Python core
    modul1
        синтаксис
        переменные
        типы данных
        операторы
        встроенные функции
        ввод данных
        изменения типов (приведение)
        робота со строками, структура данных
        Колекции
            списки 
            словарь
            множества
            кортеж
    modul2
        условные операторы
        циклы
        условное изполение
        тернарные условия
        условия в пайтон
        блоки инструкции
        while for
        break
        continue
        try-exept
        def , create-call
        args def
        returned def result
        logal global variables
        ключевые аргументы
        сменное количество параметров
        контейнеры для сохранени аргементов функции
    modul3
        datetime time
        worl with date and time
        datetime
        timedelta
        timestamp
        resular
        spetial symvol
        str method, search in str
        translate
        search in regular
        findall in regular
        sub in regular
        reguler expression
    modul4
        Робота з файлами та обробка виключень
        Навігація по файлу
        Менеджер контексту
        Байт-рядки, масив байтів, bytes
        Кодування рядків (ASCII, UTF-8, CP1251)
        Масив байтів
        Робота з нетекстовими файлами у Python
        Робота з архівами
        Робота за модулями та створення віртуального оточення
        Імпорт пакетів та модулів
        Точка входу
        Навіщо потрібен __init__.py
        Встановлення пакетів за допомогою pip
        Створення віртуального оточення
    modul5
        Можливості деяких вбудованих модулів Python
        Генерація випадкових чисел
        Контроль точності обчислень (decimal)
        Можливості пакетів math, cmath
        Робота за Collections: Іменовані кортежі, Counter,
        defaultdict, deque
        Comprehensions: list, set, dict
        Функціональне програмування
        Функція як об'єкт першого класу
        Області видимості (LEGB)
        Замикання
        Каррування
        Декоратори
        Ітератори/генератори (ключове слово yield)
        Лямбда-функції (анонімні функції)
        map
        filter
    module6
        Основи ООП в Python
        Визначення та створення класу
        Створення об'єктів
        Атрибути класу (поля та методи)
        Конструктор класу
        Наслідування
        Розширене ООП в Python
        Method Resolution Order (MRO).
        Контейнери, створені за допомогою наслідування
        (UserList, UserDict, UserString).
        Dataclasses
        Власні винятки
        Поліморфізм / Качина типізація
    module7
        Використання спеціальних методів для керування
        об'єктами
        "Магічні" методи
        Метод init
        Методи str та repr
        Методи getitem та setitem
        Функтори, метод call
        Інкапсуляція у Python (property, setter).
        Функтори, Ітератори та Управління контекстом в Python
        Створення власних менеджерів контексту
        Створення об'єкта ітератора/генератора
        Перевизначення математичних операторів
        Перевизначення операцій порівняння
    module8
        Робота з таблицями CSV у Python
        Робота з JSON файлами у Python
        Робота з YAML файлами у Python
        Серіалізація об'єктів в Python
        Серіалізація об'єктів Python
        Серіалізація об'єктів Python за допомогою pickle
        Серіалізація об'єктів Python за допомогою json
        Управління порядком серіалізації
        Упакування за допомогою __getstate__
        Розпакування за допомогою __setstate__
        Копіювання та управління станом об'єктів
        Створення копій об'єктів Python
        Створення поверхневих копій об'єктів Python
        Створення глибоких копій об'єктів Python
        Управління порядком копіювання об'єктів Python
    >>> final ptoject Consol bot

Python Web
    modul1 
        Software Engineering як процес. Мова UML
        Принципи проектування SOLID.
        - Single responsibility – принцип єдиної відповідальності.
        - Open-closed – принцип відкритості – закритості.
        - Liskov substitution - принцип підстановки Барбари
        Лисков.
        - Interface segregation – принцип поділу інтерфейсу.
        - Dependency inversion - принцип інверсії залежностей
        Design Patterns: .
        - Породжуючі патерни
        - Структурні патерни.
        - Поведінкові патерни
    modul2
        Менеджер пакетів та віртуальних оточень pipenv.
        Менеджер пакетів та віртуальних оточеннь poetry.
        Налагодження програми
        Логування програми
        Форматування коду
        Типізація в Python
        Основи роботи з Docker
    modul3 многопоточность и мультипроцессорность
        Багатопотоковість у Python
        Процеси в Python
    modul4 основы веб
        Як влаштований інтернет
        Створення сервера HTTP
        Основи HTML
        Шаблонізатор Jinja2
        Створення Web програми
        Основи роботи Socket
        Побудова запитів HTTP
    modul5 ассинхронное програмирование
        Асинхронне програмування
        Основи роботи з asyncio
        Паралельне виконання завдань async/await
        Асинхронна робота з файлами
        Aiohttp клієнт
        WebSockets
    module6 реляционные базы данных
        Основні оператори SQL:
        ER (Entity-relationship) - діаграми.
        Підключення
        Типи даних
        Робота з базами SQL
        - CREATE TABLE: Створюємо таблицю
        - INSERT: Введення даних
        - SELECT: Отримання даних
        - функції агрегації
        - Вкладені SELECT
        - Псевдоніми
        - JOIN: Приєднання таблиць
        - UPDATE: Зміна даних
        - DELETE: Видалення записів з таблиці
        - Видалення таблиць
        Стандарт PEP249 (Python Database API Specification v2.0  
    module7 ORM sql alshemy
        Основи роботи з SQLAlchemy.
        Механізм сесій в SQLAlchemy.
        Створення бази даних за допомогою моделей
        SQLAlchemy.
        Міграція баз даних за допомогою Alembic
    module8 nosql даза данных
        CAP теорема
        Типи NoSQL баз даних
        Основи роботи з MongoDB
        Робота та підключення до Python до MongoDB
        Redis
        Брокер повідомлень RabbitMQ
    module9 скрапинг
        Beautifil Soup, Lxml, Requests
        - Встановлення необхідних пакетів:
        - З чого почати скрапінг
        - Автоматизація отримання "сирих" даних
        - Парсинг HTML, пошук на сторінці за тегом, за класом, за
        ID
        Фреймворк Scrapy
        - Використання XPath для отримання
        - Створення проекту Scrapy
        - Парсинг HTML за допомогою XPath
        - Пагінація
    module10 Django
        Встановлення
        Створення проекту
        Створення web-додатку
        Робота з базами даних у Django
        Admin панель в Django
        Аргументи запиту
        Django шаблони
        Обробка форм
        Аутентифікація
    module11 Rest Api FastApi
        Основний фреймворк FastAPI
        Основи API
        Архітектурний підхід API First
        Розробка API з використанням FastAPI
        Що таке REST
        Основні методи HTTP
        - Ідемопотентність
        - HTTP метод GET
        - HTTP метод POST
        - HTTP метод PUT (PATCH)
        - HTTP метод DELETE
        - Коди відповіді HTTP
        Формування URL для REST API
        SWAGGER
    module12 авторизация аутенификация
        JWT: JSON Web Token
        Cookie
        Пакет FastAPI JWT Auth для підпису, кодування та
        декодування доступу та оновлення токенів JWT.
    module13 сложные темы веб розработки
        Завантаження файлів на сервер
        Надсилання листів для верифікації користувача
        Аутентифікація OAuth2
    module14  тестировка и розвертывние веб-приложений
        Документування коду
        Профілювання програми
        Тестування коду за допомогою:
        - Unittest
        - Pyest
        Розгортання веб-додатків на сервісах
        - https://fly.io/ через Docker контейнер
        - https://web.deta.sh/ за допомогою Deta CLI
    
    >>>final project  Rest api застосунок на FastAPI